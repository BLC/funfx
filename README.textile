h1. FunFX

FunFX is a functional testing tool for Flex applications. FunFX lets you click buttons, menus, trees
and send any kind of event to any kind of element inside a swf. It also lets you retrieve values from
elements so that you can compare them with expected results.

h2. Installation

First, install "Ruby":http://ruby-lang.org/

Second install Watir (IE/Windows) or Safariwatir (Safari/OS X)

<pre><code>gem install watir
</code></pre>

or

<pre><code>gem install safariwatir
</code></pre>

Last - install FunFX:

<pre><code>gem install funfx
</code></pre>

h2. Example

<pre><code>browser.goto('http://funfx.rubyforge.org/DemoApp.html')
flex = browser.flex_app('DemoApp')

tree = flex.tree({:id => 'box'}, {:id => 'objectTree'})
tree.open('Button controls')
tree.select('Button1')

button = @flex.button(:label => 'Default Button')
if button.enabled?
  raise "Uhm, I expected this button to be disabled..."
end
</code></pre>

h2. Building

* cd flex ; build
* cd ../demo-app ; build

h2. Running FunFX against the demo app

* Copy flex/src/AutoQuickEnv.xml to demo-app/lib/AutoQuickEnv.xml (This step will go away in the future)
* ruby demo-app/lib/httpd.rb (Start a little web server to serve the HTML/SWF)
* ruby gem/spec/funfx/demo_app/button_spec.rb (Run some FunFX)

h2. TODO

* Package XML file in FunFX.swc - makes it easier to install and get started...
* Use RCov and aim for 100% coverage of all generated methods

h2. GOTCHAS

* The showInAutomationHierarchy property seems to cause that elements can't be looked up. Investigate...

